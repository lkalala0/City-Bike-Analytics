<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.1017.1259                               -->
<workbook original-version='18.1' source-build='2019.3.1 (20193.19.1017.1259)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='CityBike_Data' inline='true' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CityBike_Data' name='textscan.1kxur7i10qywvc10wz6f417onc6g'>
            <connection class='textscan' directory='C:/Users/linak/Desktop/UNCCCLT201905DATA4/02-Homework/20-Tableau/Instructions' filename='CityBike_Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1kxur7i10qywvc10wz6f417onc6g' name='CityBike_Data.csv' table='[CityBike_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='tripduration' ordinal='1' />
            <column datatype='datetime' name='starttime' ordinal='2' />
            <column datatype='datetime' name='stoptime' ordinal='3' />
            <column datatype='integer' name='start station id' ordinal='4' />
            <column datatype='string' name='start station name' ordinal='5' />
            <column datatype='real' name='start station latitude' ordinal='6' />
            <column datatype='real' name='start station longitude' ordinal='7' />
            <column datatype='integer' name='end station id' ordinal='8' />
            <column datatype='string' name='end station name' ordinal='9' />
            <column datatype='real' name='end station latitude' ordinal='10' />
            <column datatype='real' name='end station longitude' ordinal='11' />
            <column datatype='integer' name='bikeid' ordinal='12' />
            <column datatype='string' name='usertype' ordinal='13' />
            <column datatype='real' name='birth year' ordinal='14' />
            <column datatype='integer' name='gender' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[CityBike_Data.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='index' datatype='integer' name='[Calculation_501025513343328256]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Age' datatype='real' name='[Calculation_501025513351077889]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='2017 - [birth year]' />
      </column>
      <column caption='distance per mile' datatype='real' name='[Calculation_501025513354330114]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ACOS(COS(RADIANS(90-[start station latitude])))*COS(RADIANS(90-[end station latitude]))+SIN(RADIANS(90-[start station latitude]))*SIN(RADIANS(90-[end station latitude]))*COS(RADIANS([start station longitude] - [end station longitude]))*3958.756' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='real' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.346473' measure-ordering='alphabetic' measure-percentage='0.653527' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:usertype:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Subscriber&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Customer&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:start station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India St &amp; East River&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;333 Johnson TEST 1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fulton St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hs Don&apos;t Use&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Leonard St &amp; Bayard St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norman Ave &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sullivan Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Gowanus Tech Station&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;NYCBS Depot - SSP&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S 5 Pl &amp; S 4 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 87 St  &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bike The Branches - Central Branch&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 71 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GOW Tech Shop&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenwich St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Convent Ave &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norman Ave &amp; Leonard St - 2&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;NYCBS Depot - FAR&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 2 St &amp; 2 Ave E&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 37 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Expansion Warehouse 333 Johnson Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 45 St &amp; 6 Ave (1)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8D OPS 01&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 14 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 98 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;28 St &amp; 40 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bond St &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NYCBS Depot - STY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NYCBS Depot - STY - Valet Scan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 13 St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adventures NYC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bressler&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 12 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 76 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;N 8 St &amp; Driggs Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;NYCBS Depot - STY - Garage 4&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 14 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;WS Don&apos;t Use&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8D QC Station 01&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 80 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JSQ Don&apos;t Use&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 41 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pacific St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Van Dyke St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 39 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Expansion Tech Station&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NYCBS Depot - PIT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Penn Station Valet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;LPI Facility&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;27 Ave &amp; 4 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cooper Square &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SSP Tech Workshop&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Crown St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kiosk in a box Motivate&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave OLD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riverside Dr &amp; W 89 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Soissons Landing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave  &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8D Mobile 01&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 55 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;N 11 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Picnic Point&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reed St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Schermerhorn St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 36 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Industry City, Building 1 Basement&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NYCBS Depot - RIS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Penn Station Valet - Valet Scan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; W 24 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 61 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 64 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:end station name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1 Ave &amp; E 110 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;11 Ave &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;27 Ave &amp; 4 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3 St &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;34 Ave &amp; 13 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;48 Ave &amp; 30 Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;6 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Atlantic Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Berkeley Pl &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Broadway &amp; W 32 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cadman Plaza E &amp; Red Cross Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DeKalb Ave &amp; S Portland Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 103 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 16 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 2 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 41 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 58 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;E 81 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Emerson Pl &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fulton St &amp; Adams St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Grand St &amp; Elizabeth St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Heights Elevator&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jackson St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LaGuardia Pl &amp; W 3 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lexington Ave &amp; E 111 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marcus Garvey Blvd &amp; Macon St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morningside Dr &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Newton Rd &amp; 44 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Old Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pier 40 - Hudson River Park&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Richards St &amp; Delavan St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Schermerhorn St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St. Nicholas Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Union St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 13 St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 33 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 52 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W 87 St  &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;W Broadway &amp; Spring Street&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Willoughby Ave &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Ave &amp; E 16 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;21 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3 Ave &amp; E 71 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;31 Ave &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;40 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;5 Corners Library&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9 Ave &amp; W 22 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Amsterdam Ave &amp; W 66 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bayard St &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; Berry St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broadway &amp; W 60 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carroll St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Christopher St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Columbia St &amp; Lorraine St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Crescent St &amp; Ditmars Blvd&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Driggs Ave &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 11 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 118 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 31 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 52 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 72 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;E 91 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Franklin St &amp; W Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gowanus Tech Station&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grove St PATH&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hudson St &amp; Reade St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kosciuszko St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Leonard St &amp; Maujer St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macon St &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Murray St &amp; West St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;N 12 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NYCBS Depot - PIT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pearl St &amp; Hanover Square&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prospect Pl &amp; Underhill Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Roebling St &amp; N 4 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SSP - Basement&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Throop Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vernon Blvd &amp; 50 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 107 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 22 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 43 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;W 67 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Watts St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;10 Hudson Yards&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;23 Ave &amp; 27 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3 Ave &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;45 Rd &amp; 11 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;6 Ave &amp; Broome St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bergen St &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadway &amp; Roebling St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Butler St &amp; Court St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cathedral Pkwy &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clermont Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Columbus Ave &amp; W 95 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Communipaw &amp; Berry Lane&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dean St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dwight St &amp; Van Dyke St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 14 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 35 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 55 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 76 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;E 97 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East End Ave &amp; E 86 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Front St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Graham Ave &amp; Withers St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hanson Pl &amp; Ashland Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lafayette Ave &amp; St James Pl&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lexington Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montague St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nassau St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NYCBS Depot - STY - Garage 4&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Perry St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Queens Plaza North &amp; Crescent St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S 4 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St Johns Pl &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Union Ave &amp; Jackson St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 11 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 116 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 26 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 45 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;W 78 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Brunswick St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2 Ave &amp; E 31 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;21 St &amp; Queens Plaza North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;28 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;35 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5 Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;8 Ave &amp; W 16 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Avenue D &amp; E 12 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boerum St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broadway &amp; W 39 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canal St &amp; Rutgers St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Park West &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clinton St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cooper Square &amp; Astor Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dey St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 109 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 20 St &amp; FDR Drive&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 45 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 6 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 61 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;E 84 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;FDR Drive &amp; E 35 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fulton St &amp; Rockwell Pl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greene Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henry St &amp; Grand St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey &amp; 6th St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberty St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;McGuinness Blvd &amp; Eagle St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Murray St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Norman Ave &amp; Leonard St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Park Ave &amp; E 124 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pioneer St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverside Dr &amp; W 78 St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sigourney St &amp; Columbia St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;State St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Van Brunt St &amp; Wolcott St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 16 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 37 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 53 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;W 90 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Washington Ave &amp; Greene Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WS Don&apos;t Use&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1 Pl &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;11 Ave &amp; W 59 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;27 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;34 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;4 Ave &amp; 2 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;49 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;7 Ave &amp; Park Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Atlantic Ave &amp; Furman St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Berry St &amp; N 8 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Broadway &amp; W 36 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cadman Plaza E &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central Park S &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clinton Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Concord St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DeKalb Ave &amp; Skillman St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 106 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 3 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 41 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 58 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;E 81 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Essex Light Rail&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fulton St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grand St &amp; Greene St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henry St &amp; Atlantic Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jay St &amp; Tech Pl&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laight St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lexington Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marcy Ave &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morris Canal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Newtown Ave &amp; 23 St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pacific St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pike St &amp; E Broadway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Richardson St &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Schermerhorn St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stagg St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Union St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 14 St &amp; The High Line&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 34 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 52 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;W 87 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Warren St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Willoughby Ave &amp; Walworth St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1 Ave &amp; E 68 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24 Ave &amp; 26 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;3 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;31 St &amp; Hoyt Ave N&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;46 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;6 Ave &amp; Canal St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amsterdam Ave &amp; W 125 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadway &amp; W 24 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bus Slip &amp; State St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Catherine St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clermont Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Columbus Ave &amp; W 103 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Degraw St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 15 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 2 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 39 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 55 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 78 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;E 98 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eastern Pkwy &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Front St &amp; Maiden Ln&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Army Plaza &amp; Central Park S&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harborsid&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India St &amp; West St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lenox Ave &amp; W 111 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lexington Ave &amp; E 24 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madison St &amp; Montgomery St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montgomery St &amp; Franklin Ave OLD&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Newark Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NYCBS Depot - STY - Valet Scan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pleasant Ave &amp; E 116 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Railroad Ave &amp; Kay Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S 5 Pl &amp; S 4 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St Marks Pl &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Union Ave &amp; N 12 St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 120 St &amp; Claremont Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 13 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 27 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 46 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;W 82 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Thames St&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Monmouth and 6th&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;W 38 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;21 St &amp; 36 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;3 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;31 Ave &amp; 30 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;37 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;5 Ave &amp; E 103 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;8D QC Station 01&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Allen St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barrow St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; 12 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Broadway &amp; W 56 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carroll St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Centre St &amp; Worth St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crescent St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Douglass St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 11 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 118 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 27 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 51 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 71 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;E 89 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Franklin Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gold St &amp; Frankfort St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenwich St &amp; W Houston St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hoyt St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kingston Ave &amp; Herkimer St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leonard St &amp; Boerum St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MacDougal St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Metropolitan Ave &amp; Meeker Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;N 8 St &amp; Driggs Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NYCBS Depot - GOW&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paulus Hook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prospect Park West &amp; 8 St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rivington St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South St &amp; Whitehall St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sullivan Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vernon Blvd &amp; 41 Rd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 106 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 42 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;W 63 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Street (Don&apos;t Use)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1 Ave &amp; E 18 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;3 Ave &amp; E 72 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31 St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;43 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;5 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amsterdam Ave &amp; W 73 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bedford Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broadway &amp; W 122 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carroll St &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;City Hall&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Columbia St &amp; Rivington St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Crown St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Driggs Ave &amp; N Henry St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 118 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 12 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 32 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 53 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 74 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;E 93 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 112 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Graham Ave &amp; Conselyea St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Halsey St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Humboldt St &amp; Varet St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosciuszko St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lewis Ave &amp; Decatur St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison Ave &amp; E 82 St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monroe St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;N 15 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NYCBS Depot - RIS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peck Slip &amp; Front St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rogers Ave &amp; Sterling St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SSP Tech Workshop&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tompkins Ave &amp; Hopkins St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Verona Pl &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 110 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 24 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 44 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;W 70 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Drive &amp; Prospect Park West&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;19 St &amp; 24 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2 Ave &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;30 Ave &amp; 21 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;36 Ave &amp; 10 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;5 Ave &amp; E 88 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8D Mobile 01&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Albany Ave &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Banker St &amp; Meserole Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bressler&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; W 53 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carmine St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central Park West &amp; W 102 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Coffey St &amp; Conover St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crescent St &amp; 30 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Division St &amp; Bowery&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 10 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 115 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 25 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 48 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 68 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;E 88 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin Ave &amp; Empire Blvd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fulton St &amp; William St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenwich Ave &amp; Charles St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hope St &amp; Union Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jersey &amp; 3rd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kent Ave &amp; N 7 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Leonard Gordon Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lorimer St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Meserole Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myrtle Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NYCBS DEPOT - DELANCEY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Park Pl &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pleasant Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverside Dr &amp; W 104 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South End Ave &amp; Liberty St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sterling St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vernon Blvd &amp; 30 Rd&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 100 St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 20 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;W 56 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington Pl &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;York St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;10 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;24 Ave &amp; 29 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;3 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;31 St &amp; Northern Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;47 Ave &amp; 31 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;6 Ave &amp; Spring St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bergen St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bergen St &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bushwick Ave &amp; Powers St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Center Blvd &amp; 48 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland Pl &amp; Spring St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Columbus Drive&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Degraw St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 102 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 19 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 2 St &amp; 2 Ave E&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 39 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 55 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;E 80 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eastern Pkwy &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Front St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grand Army Plaza &amp; Plaza St West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harborside&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Industry City, Building 1 Basement&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lafayette St &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lexington Ave &amp; E 29 St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maiden Ln &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montrose Ave &amp; Bushwick Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Newport PATH&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NYCBS Depot BAL - DYR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pershing Square South&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Reade St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Portland Ave &amp; Hanson Pl&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St Marks Pl &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Union Ave &amp; Wallabout St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 129 St &amp; Convent Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 13 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 27 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 47 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;W 84 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;William St &amp; Pine St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12 St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2 Ave &amp; E 96 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;28 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;35 Ave &amp; 37 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5 Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;9 Ave &amp; W 28 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baltic St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bond St &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broadway &amp; W 41 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carlton Ave &amp; Dean St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central Park West &amp; W 76 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clinton St &amp; Joralemon St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cooper Square &amp; E 7 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ditmars Blvd &amp; 19 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 110 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 20 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 47 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 6 St &amp; Avenue D&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 65 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E 85 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Flushing Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fulton St &amp; Utica Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greene Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Henry St &amp; Poplar St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;John St &amp; William St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lenox Ave &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lincoln Pl &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;McKibbin St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NJCU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norman Ave &amp; Leonard St - 2&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Park Ave &amp; Marcus Garvey Blvd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pitt St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Riverside Dr &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Smith St &amp; 3 St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steinway St &amp; 23 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Van Dyke St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 17 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 37 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 54 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 92 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wyckoff St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;14 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2 Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;28 St &amp; 40 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;35 St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5 Ave &amp; E 73 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;9 Ave &amp; W 45 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Adelphi St &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bank St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bond St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Broadway &amp; W 49 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carlton Ave &amp; Flushing Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Park West &amp; W 85 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clinton St &amp; Tillary St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Court St &amp; Nelson St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Division Ave &amp; Hooper St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 114 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 23 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 47 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 66 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 7 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;E 85 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Forsyth St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fulton St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenpoint Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henry St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Johnson St &amp; Gold St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lenox Ave &amp; W 126 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lispenard St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mercer St &amp; Bleecker St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myrtle Ave &amp; Lewis Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Park Ave &amp; St Edwards St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Plaza St West &amp; Flatbush Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Riverside Dr &amp; W 89 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Smith St &amp; 9 St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steinway St &amp; 28 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Van Vorst Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 18 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 42 St &amp; Dyer Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 55 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;W 95 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Park&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wythe Ave &amp; Metropolitan Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2 Ave &amp; E 122 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;21 St &amp; 31 Dr&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;31 Ave &amp; 14 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;37 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;5 Ave &amp; E 93 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8D OPS 01&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Allen St &amp; Hester St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barclay St &amp; Church St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broad St &amp; Bridge St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broadway &amp; W 55 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carroll St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Centre St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Columbia Heights &amp; Cranberry St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crescent St &amp; 34 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dixon Mills&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 10 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 116 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 25 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 48 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 68 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;E 89 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Franklin Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garfield Pl &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenwich St &amp; Hubert St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Howard St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kent Ave &amp; S 11 St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Leonard St &amp; Bayard St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LPI Facility&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Metropolitan Ave &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;N 6 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NYCBS Depot - FAR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pathmark Depot&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;President St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Riverview Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South St &amp; Gouverneur Ln&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suffolk St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vernon Blvd &amp; 31 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 104 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;W 59 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington St &amp; Gansevoort St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;York St &amp; Jay St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;21 St &amp; 38 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;3 Ave &amp; E 62 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;31 Ave &amp; 34 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;5 Ave &amp; E 126 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;9 Ave &amp; W 18 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Allen St &amp; Stanton St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bayard St &amp; Baxter St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; Battery Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Broadway &amp; W 58 St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carroll St &amp; Bond St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cherry St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbia St &amp; Kane St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Crescent St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Douglass St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 11 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 118 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 30 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 51 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 72 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;E 91 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Franklin St &amp; Dupont St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GOW Tech Shop&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenwich St &amp; Warren St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hs Don&apos;t Use&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kiosk in a box Motivate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leonard St &amp; Church St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MacDougal St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milton St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;N 11 St &amp; Wythe Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NYCBS Depot - GOW Annex&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pearl St &amp; Anchorage Pl&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prospect Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rivington St &amp; Ridge St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spruce St &amp; Nassau St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sullivan St &amp; Washington Sq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vernon Blvd &amp; 47 Rd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 106 St &amp; Central Park West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 22 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 43 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;W 64 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Water - Whitehall Plaza&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;11 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12 Ave &amp; W 40 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;27 St &amp; Hunter St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;34 Ave &amp; 38 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Amsterdam Ave &amp; W 119 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Astor Place&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Avenue D &amp; E 3 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bialystoker Pl &amp; Delancey St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; W 37 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cadman Plaza West &amp; Montague St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Central Park W &amp; W 96 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clinton St &amp; 4 Place&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Congress St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 106 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 4 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 43 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 59 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 82 St &amp; East End Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Exchange Place&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fulton St &amp; Clermont Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Grand St &amp; Havemeyer St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Henry St &amp; Bay St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JC Medical Center&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lawrence St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexington Ave &amp; E 127 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marin Light Rail&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mott St &amp; Prince St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pacific St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pike St &amp; Monroe St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Riverside Blvd &amp; W 67 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Schermerhorn St &amp; Court St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stanton St &amp; Chrystie St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;University Pl &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 15 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 36 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 52 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;W 88 St &amp; West End Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Warren St &amp; Church St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Willoughby St &amp; Fleet St&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;E 15 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1 Ave &amp; E 94 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;11 Ave &amp; W 27 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;24 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3 St &amp; Hoyt St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;31 St &amp; Thomson Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;48 Ave &amp; 5 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;6 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Astoria Park S &amp; Shore Blvd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Berkeley Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broadway &amp; W 29 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Center Blvd &amp; Borden Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cliff St &amp; Fulton St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Commerce St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DeKalb Ave &amp; Hudson Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 102 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 16 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 2 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 40 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 58 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;E 81 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eckford St &amp; Engert Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frost St &amp; Meeker St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grand Ave &amp; Bergen St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harrison St &amp; Hudson St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson Ave &amp; 46 Rd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lafayette St &amp; Jersey St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lexington Ave &amp; E 63 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manila &amp; 1st&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morningside Ave &amp; W 123 St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Newport Pkwy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Old Fulton St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Picnic Point&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Reed St &amp; Van Brunt St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sands St &amp; Navy St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St Nicholas Ave &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Union St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 13 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 31 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 49 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W 84 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;W Broadway &amp; Spring St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Willoughby Ave &amp; Hall St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1 Ave &amp; E 30 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;21 St &amp; Hoyt Ave S&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;3 Ave &amp; E 100 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;333 Johnson TEST 1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;44 Dr &amp; 21 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6 Ave &amp; 9 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amsterdam Ave &amp; W 79 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bedford Ave &amp; Nassau Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; W 25 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; Whipple St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carroll St &amp; Smith St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Clark St &amp; Henry St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Columbia St &amp; W 9 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cumberland St &amp; Lafayette Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duane St &amp; Greenwich St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 12 St &amp; Avenue B&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 123 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 33 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 53 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 75 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 95 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 117 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Graham Ave &amp; Grand St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamilton Park&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Huron St &amp; Franklin St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lafayette Ave &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lewis Ave &amp; Kosciuszko St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madison Ave &amp; E 99 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monroe St &amp; Classon Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nassau Ave &amp; Newell St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NYCBS Depot - SSP&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Penn Station Valet&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Putnam Ave &amp; Nostrand Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S 3 St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St James Pl &amp; Oliver St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Underhill Ave &amp; Lincoln Pl&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vesey Pl &amp; River Terrace&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 113 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 25 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 45 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;W 74 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West End Ave &amp; W 94 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;14 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2 Ave  &amp; E 104 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;28 St &amp; 41 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;35 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;5 Ave &amp; E 78 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8 Ave &amp; W 52 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adventures NYC&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bank St &amp; Washington St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bond St &amp; Schermerhorn St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Broadway &amp; W 51 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carlton Ave &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Park West &amp; W 100 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clinton St &amp; Union St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Court St &amp; State St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Division Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 115 St &amp; Lexington Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 24 St &amp; Park Ave S&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 47 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 67 St &amp; Park Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 88 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E 9 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Forsyth St &amp; Canal St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fulton St &amp; Waverly Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenwich Ave &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hicks St &amp; Montague St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kane St &amp; Clinton St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lenox Ave &amp; W 130 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Little West St &amp; 1 Pl&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mercer St &amp; Spring St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myrtle Ave &amp; Marcy Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nostrand Ave &amp; Myrtle Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Riverside Dr &amp; W 91 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Soissons Landing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sterling Pl &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vernon Blvd &amp; 10 St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 100 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 20 St &amp; 7 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 39 St &amp; 9 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;W 56 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Pl &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yankee Ferry Terminal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;11 St &amp; 43 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;28 Ave &amp; 35 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;34 St &amp; 35 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5 Ave &amp; 3 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Avenue D &amp; E 8 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bike The Branches - Central Branch&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Broadway &amp; W 38 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambridge Pl &amp; Gates Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Central Park West &amp; W 68 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clinton St &amp; Centre St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Convent Ave &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Devoe St &amp; Lorimer St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 106 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 20 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 44 St &amp; 2 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 5 St &amp; Avenue C&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 60 St &amp; York Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;E 84 St &amp; 1 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Expansion Warehouse 333 Johnson Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fulton St &amp; Grand Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Great Jones St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Henry St &amp; Degraw St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lefferts Pl &amp; Franklin Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberty Light Rail&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Market St &amp; Cherry St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mt Morris Park W &amp; W 120 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norfolk St &amp; Broome St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pacific St &amp; Nevins St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pioneer St &amp; Richards St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riverside Dr &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scholes St &amp; Manhattan Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stanton St &amp; Mangin St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University Pl &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 15 St &amp; 10 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 37 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 52 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;W 89 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Warren St &amp; Court St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wolcott St &amp; Dwight St&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Lafayette Park&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1 Ave &amp; E 44 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;3 Ave &amp; E 112 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;31 St &amp; Astoria Blvd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;44 Dr &amp; Jackson Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;6 Ave &amp; 12 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9 St &amp; 44 Rd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amsterdam Ave &amp; W 82 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bedford Ave &amp; S 9 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Broadway &amp; Moylan Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brooklyn Bridge Park - Pier 2&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carroll St &amp; Washington Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Classon Ave &amp; St Marks Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbus Ave &amp; W 72 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dean St &amp; 4 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duffield St &amp; Willoughby St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 128 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 13 St &amp; Avenue A&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 33 St &amp; 5 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 53 St &amp; Madison Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 76 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;E 97 St &amp; 3 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Frederick Douglass Blvd &amp; W 129 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Graham Ave &amp; Herbert St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hancock St &amp; Bedford Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India St &amp; East River&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lafayette Ave &amp; Fort Greene Pl&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lewis Ave &amp; Madison St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madison Ave &amp; E 120 St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monroe St &amp; Tompkins Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nassau Ave &amp; Russell St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NYCBS Depot - STY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Penn Station Valet - Valet Scan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Putnam Ave &amp; Throop Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S 4 St &amp; Rodney St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St James Pl &amp; Pearl St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Underhill Ave &amp; Pacific St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 116 St &amp; Amsterdam Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 26 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 4 St &amp; 7 Ave S&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 45 St &amp; 6 Ave (1)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;W 76 St &amp; Columbus Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West End Ave &amp; W 107 St&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:gender:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='10 bottom stations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>the 10 bottom start stations. Based on the data, there is a low number of population in this area. People do not ride bike like that in this specific area&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column caption='index' datatype='integer' name='[Calculation_501025513343328256]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_501025513343328256]' derivation='User' name='[usr:Calculation_501025513343328256:ok:4]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Field'>
                <order field='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]' />
                <sort direction='ASC' using='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok:4]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:4]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:4]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:4]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:4]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:4]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:4]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:4]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:4]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:4]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:4]' member='10' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok:4]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{3F946A91-E0F0-4628-B333-EFC6B485B2CC}' />
    </worksheet>
    <worksheet name='10 bottom stations end'>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column caption='index' datatype='integer' name='[Calculation_501025513343328256]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_501025513343328256]' derivation='User' name='[usr:Calculation_501025513343328256:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:end station name:nk]'>
            <groupfilter expression='SUM([Number of Records]) &lt;= 10' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:end station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='10' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:end station name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:end station name:nk]</column>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:end station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:end station name:nk]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{B8BA93E3-3420-4EFB-9DDC-68A85556761B}' />
    </worksheet>
    <worksheet name='Average ride distance'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='18'>Average distance ridden by miles</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column caption='distance per mile' datatype='real' name='[Calculation_501025513354330114]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ACOS(COS(RADIANS(90-[start station latitude])))*COS(RADIANS(90-[end station latitude]))+SIN(RADIANS(90-[start station latitude]))*SIN(RADIANS(90-[end station latitude]))*COS(RADIANS([start station longitude] - [end station longitude]))*3958.756' />
            </column>
            <column-instance column='[Calculation_501025513354330114]' derivation='Avg' name='[avg:Calculation_501025513354330114:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[avg:Calculation_501025513354330114:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1CF5A5C0-6E2B-4D4F-8EC9-BE0D73D6BEF2}' />
    </worksheet>
    <worksheet name='Average trip by age'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average trip by age. Based on the data, I observed that people around their 20s and 30s tend to ride bike for a long period of time. &#10;Phenomena#2 we have an outlier where 78 people of age of 85+ riding bike for over 4500 seconds in 2017&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column caption='Age' datatype='real' name='[Calculation_501025513351077889]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2017 - [birth year]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_501025513351077889]' derivation='Attribute' name='[attr:Calculation_501025513351077889:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='real' name='[birth year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_501025513351077889]' derivation='None' name='[none:Calculation_501025513351077889:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[attr:Calculation_501025513351077889:qk]' included-values='in-range'>
            <min>16.0</min>
            <max>100.0</max>
          </filter>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[attr:Calculation_501025513351077889:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[avg:tripduration:qk]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:Calculation_501025513351077889:qk]</cols>
      </table>
      <simple-id uuid='{F970895D-A3E2-41BE-B092-D289903BDA00}' />
    </worksheet>
    <worksheet name='Dynamic map over the time'>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' included-values='in-range'>
            <min>4251</min>
            <max>7842</max>
          </filter>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station longitude:qk]' field-type='quantitative' max='-8230204.2181390822' min='-8239922.780281187' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station latitude:qk]' field-type='quantitative' max='4976996.6896592127' min='4971388.4442085428' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' num-steps='5' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' />
              <size column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' />
              <text column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]' />
              <geometry column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station latitude:qk]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station longitude:qk]</cols>
        <pages>
          <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{64BE342F-4238-43B8-B72F-8847D4752AEE}' />
    </worksheet>
    <worksheet name='Trips recorded'>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{D9F0A35B-E074-49DC-AF59-0207FF9D0D85}' />
    </worksheet>
    <worksheet name='age vs peak hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column caption='Age' datatype='real' name='[Calculation_501025513351077889]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2017 - [birth year]' />
            </column>
            <column-instance column='[Calculation_501025513351077889]' derivation='Attribute' name='[attr:Calculation_501025513351077889:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='real' name='[birth year]' role='dimension' type='quantitative' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_501025513351077889]' derivation='None' name='[none:Calculation_501025513351077889:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[attr:Calculation_501025513351077889:qk]' included-values='in-range'>
            <min>16.0</min>
            <max>100.0</max>
          </filter>
          <filter class='categorical' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:gender:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gender:ok]' member='1' />
              <groupfilter function='member' level='[none:gender:ok]' member='2' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[attr:Calculation_501025513351077889:qk]</column>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:gender:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[avg:tripduration:qk]</rows>
        <cols>([federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:gender:ok] * [federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:Calculation_501025513351077889:qk])</cols>
      </table>
      <simple-id uuid='{0B71DE73-D95E-487B-BFE2-4DAF98E652D8}' />
    </worksheet>
    <worksheet name='bike due to repair'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Bike id due to repair are the one been ridden the most by people.&#10;=&gt; The bike due to repair is the bike id 27076 been driven 11 million time during the year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tripduration]' derivation='Sum' name='[sum:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:bikeid:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:tripduration:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:bikeid:ok]' />
              <lod column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:bikeid:ok]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:tripduration:qk]</cols>
      </table>
      <simple-id uuid='{00D4CF75-A27C-4BA3-98E4-3D36DA5F2F4D}' />
    </worksheet>
    <worksheet name='bike used by id'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Bike utilization by ID</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:bikeid:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:bikeid:ok]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{46066548-D267-45A2-909D-48FCDC3A0876}' />
    </worksheet>
    <worksheet name='customer vs subscriber'>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:usertype:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:usertype:nk]' member='&quot;Customer&quot;' />
              <groupfilter function='member' level='[none:usertype:nk]' member='&quot;Subscriber&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:usertype:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:usertype:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:usertype:nk]</cols>
      </table>
      <simple-id uuid='{BB60B284-1E76-4176-8173-23D70D5BC146}' />
    </worksheet>
    <worksheet name='gender participants'>
      <layout-options>
        <title>
          <formatted-text>
            <run>In Gender participants , I realized that there is an outliers on how male participate more than women&#10;1 for male and 2 for female</run>
            <run fontalignment='1'>Æ&#10;              </run>
            <run fontalignment='1' fontcolor='#f17b79'>Æ </run>
            <run bold='true' fontalignment='1' fontcolor='#f17b79'>Phenomena #1</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:gender:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gender:ok]' member='1' />
              <groupfilter function='member' level='[none:gender:ok]' member='2' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:gender:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:gender:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:gender:ok]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{F926A35E-3898-4144-85DD-8E2745E369A1}' />
    </worksheet>
    <worksheet name='peak hour during winter'>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:starttime:ok]' member='1' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='2' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='12' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{9349E5F5-F8D5-43F4-830F-3B0A6F6454C6}' />
    </worksheet>
    <worksheet name='peak hours during summer months'>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:starttime:ok]' member='6' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='7' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='8' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='9' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{C7532447-07EE-4FDE-9CEC-E750C9C88FF4}' />
    </worksheet>
    <worksheet name='percentage of ridership growth'>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field' type='PctTotal'>
                <order field='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:usertype:nk]' />
                <order field='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]' />
              </table-calc>
            </column-instance>
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:starttime:ok]' member='1' />
              <groupfilter function='member' level='[mn:starttime:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:usertype:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:usertype:nk]' member='&quot;Customer&quot;' />
              <groupfilter function='member' level='[none:usertype:nk]' member='&quot;Subscriber&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]</column>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:usertype:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[pcto:sum:Number of Records:qk]</rows>
        <cols>([federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:usertype:nk] / [federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok])</cols>
      </table>
      <simple-id uuid='{185E5C89-7CFE-4422-8055-3A44303BD8E1}' />
    </worksheet>
    <worksheet name='static map'>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' included-values='in-range'>
            <min>50009</min>
            <max>162342</max>
          </filter>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station longitude:qk]' field-type='quantitative' max='-8232076.322188017' min='-8239610.8090295317' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station latitude:qk]' field-type='quantitative' max='4975613.2288401434' min='4971265.3375642346' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' num-steps='5' palette='red_gold_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='Coastline' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' />
              <size column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' />
              <text column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]' />
              <geometry column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='3.3922650814056396' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station latitude:qk]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{BA0C40FB-8419-44AC-96F0-65E5BB305B3A}' />
    </worksheet>
    <worksheet name='top 10 stations for start'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 stations for starting a journey . Base on the data, I can conclude that the 10 most stations are located near schools, bar, attractions or industry and compagny</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column caption='index' datatype='integer' name='[Calculation_501025513343328256]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_501025513343328256]' derivation='User' name='[usr:Calculation_501025513343328256:ok:5]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Field'>
                <order field='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]' />
                <sort direction='DESC' using='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok:5]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:5]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:5]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:5]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:5]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:5]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:5]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:5]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:5]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:5]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok:5]' member='10' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok:5]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{D201D080-C748-41BE-B2ED-3EDEEBAD58EE}' />
    </worksheet>
    <worksheet name='top end stations for end'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 stations for end journey based on the data i guess it is like the stopping point of some people</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CityBike_Data' name='federated.10ldt3o1r8b2kf1ce6wei0qavk06' />
          </datasources>
          <datasource-dependencies datasource='federated.10ldt3o1r8b2kf1ce6wei0qavk06'>
            <column caption='index' datatype='integer' name='[Calculation_501025513343328256]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_501025513343328256]' derivation='User' name='[usr:Calculation_501025513343328256:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='1' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='2' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='3' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='4' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='5' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='6' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='7' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='8' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='9' />
              <groupfilter function='member' level='[usr:Calculation_501025513343328256:ok]' member='10' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:end station name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:end station name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:end station name:nk]</rows>
        <cols>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{47BBE7E6-CC08-4772-A5CC-9E9C10CCDD42}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='City Bike Story' type='storyboard'>
      <style />
      <size maxheight='768' maxwidth='1024' minheight='768' minwidth='1024' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='7' param='vert' removable='false' type='layout-flow' w='98438' x='781' y='1042'>
            <zone h='5339' id='8' type='title' w='98438' x='781' y='1042'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92577' id='1' param='vert' removable='false' type='layout-flow' w='98438' x='781' y='6381'>
              <zone h='13151' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98438' x='781' y='6381' />
              <zone h='79426' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98438' x='781' y='19532'>
                <flipboard active-id='9' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='The number of records for 2017 from jan to december' captured-sheet='Trips recorded' id='1' />
                    <story-point caption='In this second analysis, i found that we have more subcribers than customer 10% difference' captured-sheet='percentage of ridership growth' id='2' />
                    <story-point caption='Pick hours during summer time is early in the morning around 8 and as late as 5pm in the evening. Based on this data, it is more work time' captured-sheet='peak hours during summer months' id='3' />
                    <story-point caption='compare to winter time suprisingly, more people tend to take  the bike in the morning 8am and less people take the bike at 5pm.' captured-sheet='peak hour during winter' id='4' />
                    <story-point caption='Looking at his data chart analysis, I can conclude that more men ride the bike than woman. Refering the to peak hour the bike is ridden, which is work time, woman would not ride a bike in heels.' captured-sheet='gender participants' id='5' />
                    <story-point caption='This is my first phenomena where I can see that old people around 85 old have ridden the bike for more than 4500 miles which is suprising but the fact is, most of them will need that for health purpose' captured-sheet='Average trip by age' id='6' />
                    <story-point caption='The bike most ridden during the year will obviously need more repair. which the 27076 bike id number' captured-sheet='bike due to repair' id='7' />
                    <story-point caption='The first map shows the number of records by locations with population between 10000 and 10000' captured-sheet='static map' id='8'>
                      <capturedDeltas>
                        <worksheet name='static map'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station latitude:qk]' field-type='quantitative' max='4974286.2645656252' min='4969418.5652973335' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station longitude:qk]' field-type='quantitative' max='-8232916.7170653641' min='-8239738.0629401403' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='This dynamic map, show the record of trip start to end by month.' captured-sheet='Dynamic map over the time' id='9' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{A97CB5C6-06DD-4C46-B607-87E008372912}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='worksheet' name='Trips recorded'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{64C265A8-005F-43A3-A3EC-3F97488762CA}' />
    </window>
    <window class='worksheet' name='percentage of ridership growth'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:usertype:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0BE954E-6FC4-40B5-8E70-B8068C5E4A49}' />
    </window>
    <window class='worksheet' name='customer vs subscriber'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:usertype:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:usertype:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B3C368D4-1A9E-4846-99EB-050391D67CEB}' />
    </window>
    <window class='worksheet' name='peak hours during summer months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{389AECED-869A-49AA-969A-58C26BD88FDF}' />
    </window>
    <window class='worksheet' name='peak hour during winter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[mn:starttime:ok]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CFC17C2B-9104-4DF0-A8B0-E86A6E4DBBFE}' />
    </window>
    <window class='worksheet' name='top 10 stations for start'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok:5]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D37B9DEC-DE52-4F7D-AD05-504F6BBED68F}' />
    </window>
    <window class='worksheet' name='top end stations for end'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:end station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:end station name:nk]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok:4]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73BF2AB2-EBB0-417C-90C4-89C026672395}' />
    </window>
    <window class='worksheet' name='10 bottom stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{996F9690-09E0-4C8B-A120-E9963D9CF684}' />
    </window>
    <window class='worksheet' name='10 bottom stations end'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:end station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:end station name:nk]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[usr:Calculation_501025513343328256:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{296D352D-7691-4753-B432-7B75E27BD178}' />
    </window>
    <window class='worksheet' name='gender participants'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:gender:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:gender:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFBFC757-C3F1-401D-A34B-3966DBAFEA8E}' />
    </window>
    <window class='worksheet' name='Average trip by age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:birth year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BB28F550-0588-4525-808B-819F2E7851AA}' />
    </window>
    <window class='worksheet' name='Average ride distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DFCB2042-BB79-4DC9-AB13-E92886D53568}' />
    </window>
    <window class='worksheet' name='bike due to repair'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:bikeid:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D557F80C-372C-4DD9-9AC8-FC1E029DDB56}' />
    </window>
    <window class='worksheet' name='bike used by id'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2F18D584-5A0E-416E-A6FD-57EBBC8853DC}' />
    </window>
    <window class='worksheet' name='static map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{080AB0D3-771D-4EB0-A63E-E24958753764}' />
    </window>
    <window class='worksheet' name='Dynamic map over the time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>12</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[none:start station name:nk]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{433D01FE-3E51-492B-AB97-B7125D956F09}' />
    </window>
    <window class='dashboard' name='City Bike Story'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{3E2D4530-8555-4BD0-91B3-4F32CDC7FAB7}' />
    </window>
    <window class='worksheet' maximized='true' name='age vs peak hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[hr:starttime:ok]</field>
            <field>[federated.10ldt3o1r8b2kf1ce6wei0qavk06].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CFE61D1-0486-466E-A38D-5AD5BDD3B34D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='10 bottom stations' width='192'>
      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
      Ql4TASDktf8DmBECr6tj8yIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='10 bottom stations end' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='24' name='Average ride distance' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACiUlEQVRYhe2VTUvjUBiFzxQRIYi4SMlO/QGKunXloiv/gd26EdeKJSgU/FhYBWmq4LIQ
      uhYqzcKgK4VCQLJQWpBSIQuJIMV+kNZ4ZiEzJbQ6zDDOLUyf3b3vyX0PJ3lvvpEk/mNCog2I
      ph+AaAOi6Qcg2oBo+gGINiCafgCiDYimH4BoA6LpByDagGgGRBt4e3tDNpvF8fExXNeFoiiI
      xWKYm5sL6F5eXpBMJnF2dobX11fMzs4iHo8jHA5jfX0d5+fnAf3w8DA0TYOiKDg8PIRpmvA8
      D7IsY21tDfPz8+9CCubi4oIbGxt0HIe+79O2bS4vL3fotre3mclkWKvV2Gw2qes6d3d3u57p
      OA7j8Tjr9Trv7+9pGAar1Sp932ehUODS0hLL5TJJUngAvu/T9/3Aem9vr0PXarUCa8dxuL+/
      3/VMXdd5eXn5Yb+trS0Wi0WSpPA7IBQKIRRq27i6ugqsfzAw0J7WZrOJ09NTTE1Ndeienp5w
      e3uLmZmZjprrukilUpAkCRMTE++bf/rm/ibPz89UVZXX19ef6izLoqqqfHx87FqvVCpUVZWu
      63atV6tV5nI5xmIxVioVkj0wAvV6nTs7OyyVSp/qCoUCE4kEG43Gh5pcLkdd13/Z8+TkhKZp
      kuyBEbAsC2NjYxgfH/9UZxgGFhYWMDQ01LXeaDRgWRYikUhg3zRN5PN5eJ4HAHh4eIBlWRgZ
      GQHQA7/BYrGIo6MjHBwc/NyTJAmGYWB1dRWLi4uYnp6GbdtIp9OBZycnJ6FpGiRJQj6fx+jo
      KGRZDmgURYGmabi5uUGr1YIsy1hZWWnfEb/1vf5D7u7uuLm5Sc/zvrSP8BH4CNu2EY1GMTg4
      +KV9vgNzFkp3+lGhOgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average trip by age' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAY/UlEQVR4nO3daXAc553f8W/PPYPBXLgB4iJ4QATFSyJFURdlL5eWxLUdRVbt2mtveeWt
      Xadc2ThbqaSSzUZVebFJ9o03pVSsjZ1dJ+v4LNsr2fJJUZIt6uAlXiAJEBeJGwPMDObume7O
      Cwg0KZLiDDAzANj/TxWqSADz9NOD/s3TT/fTz6MYhmEghElZVroCQqwkCYAwNQmAMLVVGYBc
      Lres12ez2RLV5NYMwyj7NspdvqZp5PP5spVvGAaqqpatfABVVdF1fVllrMoASL9cVMqqDIAQ
      lSIBEKYmARCmJgEQpiYBEKYmARCmJgEQpiYBEKYmARCmJgEQpiYBEKYmARCmJgEQpiYBEKYm
      ARCmJgEQpiYBEKYmARCmJgEQpiYBEKYmARCmVtEAGPk0b7z8Mn0zMSYmRojFMoSvXuLyeKSS
      1RDimooGYHKoD8PlA11DVdOkYzMMTmRorvNXshpCXGOr1IZyyRkmUm7WN1tIA6SjHHnnPbY9
      fgCP3YKu69cmatJ1fVkTQ2maVpGJpcq5jXKXbxgGhmGgaVrZytd1vaxzPGmahq7rKIqy5DKU
      Ss0OPXHpGG+evUpuPoKleSPbNtQTdHoZHp2kZ9cOqp2/zaKqqjgcjiVvK5vN4nQ6S1HtW1qc
      9ayc2yj3PmiahmEY2Gzl+Qw0DINcLresv+OdqKqKzWbDYln6iUzFArBobmSIlK8GWzaK292A
      khlnLF1Fd0c9izmWAEgAClGKAFTsFGhRqL2TEAC+hW/4Oxf/JUTFyWVQYWoSAGFqEgBhahIA
      YWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFq
      EgBhahIAYWoSAGFqEgBhahIAYWoSAGFqEgBhahIAYWoSAGFqRUyNaJBNJUllc4CFar8Pm2Xp
      s/IKsRoUEYAoL/71V/Cs78CKnyd+/xCN7vJNfCpEJRQRABetW7by8BMHcVoseJz2ojakqwlO
      vfsOk3GFXfsexGUkcDoCWNQ5ZnIuWmWRDLECiugD5HDkU/zT977Dd7/7U8LZXFEb0jVYv2Mf
      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
    </thumbnail>
    <thumbnail height='192' name='City Bike Story' width='192'>
      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
      FAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dynamic map over the time' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trips recorded' width='127'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='age vs peak hours' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='bike due to repair' width='192'>
      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
      0EgBSBqa/wVVR1j4Ss+6HgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='bike used by id' width='192'>
      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
      DzvOCffOwxnuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='customer vs subscriber' width='187'>
      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
    </thumbnail>
    <thumbnail height='119' name='gender participants' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB3CAYAAABVE0/KAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFBUlEQVR4nO3df2jUdRzH8ZeeohOW7RprIkU/qPAs2NfY1g/BhbXwr/ZHoEhWZHVtZhlY
      fyQlRVH9JRYZkwbzB6VQsAiSBO2PjURlayOdm5CJEF5r7tCj293W1/VHdO6mwr437vu9r+/n
      46/te9/B+4/v8z6fG3ffmzUxMTEhwKjZQQ8ABIkAYBoBwDQCgGkEANMIAKYRAEwjAJhGADCN
      AGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMAmEYAMI0AYBoB
      wDQCKLJ0Oh30CEWXSqWCHqFgBADTCACmzQl6AAtS2+4PeoSiC+smiBUAphEATCOAAownz6ir
      43N9tPkTHUgEPQ1mggA869W+Tw8re99aPbOyMuhhMEO8CPasRuu21kiSEmeDnQQzxwoA0wgA
      phEATCMAmEYAMG0W3xTvUeKA3t/aoT+mHF7c9J7eXVV91enpdFpua50/s8EzAigyAihtbIFg
      GgHANLZARZZOp7VgwYKgxyiqVCql8vLyoMcoCCsATCMAmEYAMI13g/rg3Jq1QY9QdMmgBygQ
      KwBMIwCYxhbIM1eXTh/Unj0/6uTQqFRWpQdXv67nH65UJOjR4BkBePXXIbX/MKYVLR/rlUXz
      dTl5Sh2ftasztlkNC4MeDl4RgFfRldqwKZJ7to9ULNGjyzrVNyqJAEKH1wBeRSJ5Wx13+Ii+
      P3OHnKvfCIoQYAUo2LiGunarbTCmlzY0ivtDhBMBFMK9pO6vvlR/7Fm9tZ4Xv2FGAJ65Gvim
      XecbNmrdbXODHgYzxGsAry526vD441rFxX9DYAXw6txZnej8Wi2d+Yfrmlu1viaYkVA4Pg9Q
      ZOl0WsMvvBj0GLgOtkAwjQBgGlugIuMjkaWNFQCmsQIUmYWvSQ0z/g3qgxt9CxTmbR5bIJhG
      ADCNAGAaAcA0/gsE01gBYBoBwDQCgGkEANMIAKYRgI/c4SNq27JR8XiLNn2wX/1/X3msty2u
      +Bt71e9O+aPMUe1oiSve1uvrrJO5mfPqO7Bb29/ZpKljlPLc00EAvkno4M6fVPHch9rRul1v
      N1zQrl1Hlck9XqemxoR6BvOvpExft8aWr9Biv8fNSejQzr0aqHxC8aYHrvF4qc49PQTgl99/
      1vHbm/TUvTcpormqWr5Gjanj+uVKAVrkLFWiZ1BXLqWM+rrHVLOsIoCB/1etxtfe1OraRZp/
      nfu/lObc00MAfrmYVPTuuybdQyiqJUvn6MLIpHOqHS1N9Cj3ZJrpU/dYjZybfZ3Uu7DOLQLw
      TTabVVnZ/LxjsyND+nNo8pFq1TvJ3HYi09ct1T8UgluOhnVuAvDNvHnzNDqayTt22a3SrVX5
      50WdmJI9g3LlauCE5Dj50ZSqsM5NAH5ZWKGR385M2ieP6NTJf3RLdMp5UUexZI8Gx39Vd9ZR
      SK6j0M5NAH658xHVnuvQd6cvydW4hrr26WB57TUulKicWFLH9x9T1nEUkutIYZ2bj0T6plqN
      Lz+m9m1b1DLsquyeJ/Vqc/01L5SoE1Pi20E1PF0Kl1Gv2uJf6Fju92P//VzXrNYpt8Irrbmn
      h7dDwzS2QDCNAGAaAcA0AoBpBADTCACmEQBMIwCYRgAwjQBgGgHANAKAaQQA0wgAphEATCMA
      mEYAMI0AYBoBwDQCgGkEANMIAKYRAEwjAJhGADCNAGAaAcA0AoBpBADTCACm/QsosHpO5+De
      mwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='peak hour during winter' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='peak hours during summer months' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='percentage of ridership growth' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='static map' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='top 10 stations for start' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top end stations for end' width='192'>
      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
      obXfALXYdn1AQko5AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
